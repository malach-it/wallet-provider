database_mapping = {
        'walletType': {'type': 'string', 'target': 'generalOptions.walletType'},
        'companyName': {'type': 'string', 'target': 'generalOptions.companyName'},
        'splashScreenTitle': {'type': 'string', 'target': 'generalOptions.splashScreenTitle'},
        'tagLine': {'type': 'string', 'target': 'generalOptions.tagLine'},
        'profileName': {'type': 'string', 'target': 'generalOptions.profileName'},
        'displayProfile': {'type': 'boolean', 'target': 'settingsMenu.displayProfile'},
        'displayDeveloperMode': {'type': 'boolean', 'target': 'settingsMenu.displayDeveloperMode'},
        'displayHelpCenter': {'type': 'boolean', 'target': 'settingsMenu.displayHelpCenter'},
        'displaySelfSovereignIdentity': {'type': 'boolean', 'target': 'settingsMenu.displaySelfSovereignIdentity'},
        'displaySecurityAdvancedSettings': {'type': 'boolean', 'target': 'walletSecurityOptions.displaySecurityAdvancedSettings'},
        'verifySecurityIssuerWebsiteIdentity': {'type': 'boolean', 'target': 'walletSecurityOptions.verifySecurityIssuerWebsiteIdentity'},
        'confirmSecurityVerifierAccess': {'type': 'boolean', 'target': 'walletSecurityOptions.confirmSecurityVerifierAccess'},
        'secureSecurityAuthenticationWithPinCode': {'type': 'boolean', 'target': 'walletSecurityOptions.secureSecurityAuthenticationWithPinCode'},
        'tezosSupport': {'type': 'presence', 'target': 'blockchainOptions.tezosSupport'},
        'ethereumSupport': {'type': 'boolean', 'target': 'blockchainOptions.ethereumSupport'},
        'hederaSupport': {'type': 'boolean', 'target': 'blockchainOptions.hederaSupport'},
        'bnbSupport': {'type': 'boolean', 'target': 'blockchainOptions.bnbSupport'},
        'fantomSupport': {'type': 'boolean', 'target': 'blockchainOptions.fantomSupport'},
        'polygonSupport': {'type': 'boolean', 'target': 'blockchainOptions.polygonSupport'},
        'displayManageDecentralizedId': {'type': 'boolean', 'target': 'selfSovereignIdentityOptions.displayManageDecentralizedId'},
        'oidv4vcProfile': {'type': 'string', 'target': 'selfSovereignIdentityOptions.oidv4vcProfile'},
        'scope': {'type': 'boolean', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.scope'},
        'statusListCache': {'type': 'boolean', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.statusListCache'},
        'cryptoHolderBinding': {'type': 'boolean', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.cryptoHolderBinding'},
        'pushAuthorizationRequest': {'type': 'boolean', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.pushAuthorizationRequest'},
        'securityLevel': {'type': 'securityLevel', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.securityLevel'},
        'defaultDid': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.defaultDid'},
        'subjectSyntaxeType': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.subjectSyntaxeType'},
        'clientAuthentication': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.clientAuthentication'},
        'client_id': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.client_id'},
        'client_secret': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.client_secret'},
        'oidc4vciDraft': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.oidc4vciDraft'},
        'oidc4vpDraft': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.oidc4vpDraft'},
        'siopv2Draft': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.siopv2Draft'},
        'vcFormat': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.vcFormat'},
        'proofType': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.proofType'},
        'proofHeader': {'type': 'string', 'target': 'selfSovereignIdentityOptions.customOidc4vcProfile.proofHeader'},
        'displayChatSupport': {'type': 'boolean', 'target': 'helpCenterOptions.displayChatSupport'},
        'customChatSupport': {'type': 'boolean', 'target': 'helpCenterOptions.customChatSupport'},
        'displayEmailSupport': {'type': 'boolean', 'target': 'helpCenterOptions.displayEmailSupport'},
        'customEmailSupport': {'type': 'boolean', 'target': 'helpCenterOptions.customEmailSupport'},
        'customChatSupportName': {'type': 'string', 'target': 'helpCenterOptions.customChatSupportName'},
        'customEmail': {'type': 'string', 'target': 'helpCenterOptions.customEmail'},
        'displayOver13': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver13'},
        'displayOver15': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver15'},
        'displayOver18': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver18'},
        'displayOver21': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver21'},
        'displayOver50': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver50'},
        'displayOver65': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver65'},
        'displayVerifiableId': {'type': 'boolean', 'target': 'discoverCardsOptions.displayVerifiableId'},
        'displayVerifiableIdSdJwt': {'type': 'boolean', 'target': 'discoverCardsOptions.displayVerifiableIdSdJwt'},
        'displayEmailPass': {'type': 'boolean', 'target': 'discoverCardsOptions.displayEmailPass'},
        'displayEmailPassJwt': {'type': 'boolean', 'target': 'discoverCardsOptions.displayEmailPassJwt'},
        'displayPhonePass': {'type': 'boolean', 'target': 'discoverCardsOptions.displayPhonePass'},
        'displayPhonePassJwt': {'type': 'boolean', 'target': 'discoverCardsOptions.displayPhonePassJwt'},
        'displayDefi': {'type': 'boolean', 'target': 'discoverCardsOptions.displayDefi'},
        'displayHumanity': {'type': 'boolean', 'target': 'discoverCardsOptions.displayHumanity'},
        'displayHumanityJwt': {'type': 'boolean', 'target': 'discoverCardsOptions.displayHumanityJwt'},
        'displayHumanityJwt': {'type': 'boolean', 'target': 'discoverCardsOptions.displayHumanityJwt'},
        'displayOver18_2': {'type': 'boolean', 'target': 'discoverCardsOptions.displayOver18Jwt'},
        'displayVerifiableId2': {'type': 'boolean', 'target': 'discoverCardsOptions.displayVerifiableIdJwt'},
        'isAllowed': {'type': 'boolean', 'target': 'companySignature.isAllowed'},
        'CompanyKey': {'type': 'string', 'target': 'companySignature.CompanyKey'},
        'Companykid': {'type': 'string', 'target': 'companySignature.Companykid'},
        }

base_ssi_configuration = {
    'DIIP': {
        'vcFormat': 'jwt_vc_json',
        "proofHeader": "kid",
        "proofType": "jwt",
        'statusListCache': True,
        'securityLevel': False,
        'clientAuthentication': 'client_id',
        'credentialManifestSupport': False,
        'userPinDigits': '4',
        'defaultDid': 'did:jwk:p-256',
        'subjectSyntaxeType': 'did',
        'cryptoHolderBinding': True,
        'scope': False,
        'client_id': '',
        'client_secret': '',
        'oidc4vciDraft': '13',
        'oidc4vpDraft': '18',
        'siopv2Draft': '12',
        'pushAuthorizationRequest': False
    },
    'EBSI': {
        'vcFormat': 'jwt_vc',
        "proofHeader": "kid",
        "proofType": "jwt",
        'statusListCache': True,
        'securityLevel': False,
        'clientAuthentication': 'client_id',
        'credentialManifestSupport': False,
        'userPinDigits': '4',
        'defaultDid': 'did:key:ebsi',
        'subjectSyntaxeType': 'did',
        'cryptoHolderBinding': True,
        'scope': False,
        'client_id': '',
        'client_secret': '',
        'oidc4vciDraft': '11',
        'oidc4vpDraft': '20',
        'siopv2Draft': '12',
        'pushAuthorizationRequest': False
    },
    'HAIP': {
        'vcFormat': 'vc+sd-jwt',
        "proofHeader": "kid",
        "proofType": "jwt",
        'statusListCache': True,
        'securityLevel': False,
        'clientAuthentication': 'client_secret_jwt',
        'credentialManifestSupport': False,
        'userPinDigits': '4',
        'defaultDid': 'urn:ietf:params:oauth:client-assertion-type:jwt-client-attestation',
        'subjectSyntaxeType': 'did',
        'cryptoHolderBinding': True,
        'scope': True,
        'client_id': '',
        'client_secret': '',
        'oidc4vciDraft': '13',
        'oidc4vpDraft': '20',
        'siopv2Draft': '12',
        'pushAuthorizationRequest': False
    },
    'OWF': {
        'vcFormat': 'vc+sd-jwt',
        "proofHeader": "kid",
        "proofType": "jwt",
        'statusListCache': True,
        'securityLevel': False,
        'clientAuthentication': 'client_id',
        'credentialManifestSupport': False,
        'userPinDigits': '4',
        'defaultDid': 'did:jwk:p-256',
        'subjectSyntaxeType': 'did',
        'cryptoHolderBinding': True,
        'scope': False,
        'client_id': '',
        'client_secret': '',
        'oidc4vciDraft': '13',
        'oidc4vpDraft': '20',
        'siopv2Draft': '12',
        'pushAuthorizationRequest': False
    }
}
